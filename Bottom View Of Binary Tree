import java.util.*;



 class Pair{
    int hd;
    TreeNode node;
    Pair(int val,TreeNode node){
        this.hd=val;
        this.node=node;
    }
}
 class TreeNode {
     int val;
     TreeNode left;
     TreeNode right;
    
     TreeNode(int val) {
         this.val = val;
         this.left = null;
         this.right = null;
     }
 }
    


class HelloWorld {
    public static List<Integer> bottomView(TreeNode root) {
        List<Integer>list=new ArrayList<>();
        if(root==null){
            return list;
        }     
        Queue<Pair>q=new LinkedList<Pair>();
        Map<Integer,Integer>map=new TreeMap<>();
        q.add(new Pair(0,root));   
        while(!q.isEmpty()){
            Pair p=q.remove();
            int hd=p.hd;
            TreeNode node=p.node;
            System.out.println("hd="+hd+" nodeVal="+node.val);
            map.put(hd,node.val);
            if(node.left!=null){
                q.add(new Pair(hd-1,node.left));
            }
            if(node.right!=null){
                q.add(new Pair(hd+1,node.right));
            }
        }
       
        for(Map.Entry<Integer,Integer>entry:map.entrySet()){
           
            list.add(entry.getValue());
        }
        return list;
    }
    public static void main(String[] args) {
        TreeNode root=new TreeNode(1);
        root.left=new TreeNode(2);
        root.right=new TreeNode(3);
        root.left.left=new TreeNode(4);
        root.left.right=new TreeNode(5);
        root.right.left=new TreeNode(6);
        root.right.right=new TreeNode(7);
        root.right.right.left=new TreeNode(8);
        root.right.right.right=new TreeNode(9);
        List<Integer>list=new ArrayList<>();
        list=bottomView(root);
        for(int i=0;i<list.size();i++){
            System.out.print(list.get(i)+" ");
        }
      
    }
}
