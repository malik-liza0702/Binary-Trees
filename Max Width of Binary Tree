import java.util.*;
 class TreeNode {
     int val;
     TreeNode left;
     TreeNode right;
    TreeNode() {}
    TreeNode(int val) { this.val = val; }
    TreeNode(int val, TreeNode left, TreeNode right) {
        this.val = val;
        this.left = left;
        this.right = right;
    }
  }
 class Pair{
     int val;
     TreeNode node;
     Pair(TreeNode node,int val){
         this.node=node;
         this.val=val;
     }

 }
 
class HelloWorld {
    public static int widthOfBinaryTree(TreeNode root) {
        if(root==null){
            return 0;
        }
        int ans=0;
        Queue<Pair>q=new LinkedList<>();
        q.add(new Pair(root,0));
        while(!q.isEmpty()){
            int size=q.size();
            int min=q.peek().val;
            int first=0;
            int last=0;
            for(int i=0;i<size;i++){
                int curr=q.peek().val-min;
                TreeNode node=q.peek().node;
                q.poll();
                if(i==0) first=curr;
                if(i==size-1)last=curr;
                if(node.left!=null){
                    q.add(new Pair(node.left,curr*2+1));
                }
                 if(node.right!=null){
                    q.add(new Pair(node.right,curr*2+2));
                }
            }
            ans=Math.max(ans,last-first+1);
        }
        return ans;

    }
    public static void main(String[] args) {
        TreeNode root=new TreeNode(1);
        root.left=new TreeNode(3);
        root.right=new TreeNode(7);
         root.left.left=new TreeNode(8);
          root.right.right=new TreeNode(4);
          int width=widthOfBinaryTree(root);
          System.out.println("width= "+width);
        
    
    }
}
