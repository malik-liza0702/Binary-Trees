public class Codec {

   
    public String serialize(TreeNode root) {
        if(root==null){
            return " ";
        }
        StringBuilder sb=new StringBuilder();
        Queue<TreeNode>q=new LinkedList<>();
        q.add(root);
        while(!q.isEmpty()){
            TreeNode node=q.poll();
            if(node==null){
                sb.append("#,");
                continue;
            }
            sb.append(node.val+",");
            q.add(node.left);
            q.add(node.right);

        
        }
        return sb.toString();
    }

    // Decodes your encoded data to tree.
    public TreeNode deserialize(String data) {
        if(data==" "){
            return null;
        }
        String[] value=data.split(",");
        Queue<TreeNode>q=new LinkedList<>();
    
        TreeNode root=new TreeNode(Integer.parseInt(value[0]));
        q.add(root);
        for(int i=1;i<value.length;i++){
            TreeNode node=q.poll();
            if(!value[i].equals("#")){
                TreeNode left=new TreeNode(Integer.parseInt(value[i]));
                node.left=left;
                q.add(left);
            }
            if(!value[++i].equals("#")){
                TreeNode right=new TreeNode(Integer.parseInt(value[i]));
                node.right=right;
                q.add(right);
            }

        }
        return root;

        
    }
}
